{"version":3,"sources":["css/grid/vars.css","css/grid/grid-basic.css","css/grid/grid-bleed.css","css/grid/grid-column-classes.css","css/grid/grid-sidebar.css"],"names":[],"mappings":"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","file":"grid.css","sourcesContent":["/* =============================================\n                 $ Breakpoints\n============================================= */\n$xs:    480px  !default;\n$sm:    750px  !default;\n$md:    1080px !default;\n$lg:    1280px !default;\n\n\n/* =============================================\n                  $ Variables\n============================================= */\n\n/* Container Settings */\n$content-max-width: 1600px  !default;\n\n/* Grid Layout */\n$grid-columns:         12   !default;\n$grid-mobile-gutter:   15px !default;\n$grid-gutter:          20px !default;\n$grid-mobile-margin:   15px !default;\n$grid-margin:          30px !default;\n\n/* Grid Breakpoints */\n$grid-breakpoint-standard:  $sm !default;\n$grid-breakpoint-max:       resolve($content-max-width + ($grid-gutter * 2));\n$grid-breakpoint-bleed-max: resolve($content-max-width + ($grid-gutter * 2) + (($grid-margin - $grid-gutter) * 2));\n\n$column_breakpoints: (\n  xs: $xs,\n  sm: $sm,\n  md: $md,\n  lg: $lg\n) !default;\n\n/* Sidebar Parent Grid */\n$grid-sidebar-gutter:              40px     !default;\n$grid-sidebar-use-gap:             'false'  !default;\n$grid-sidebar-breakpoint-standard:  $sm     !default;\n$grid-sidebar-primary-columns:      8       !default;\n$grid-sidebar-aside-columns:        4       !default;\n$grid-sidebar-aside-first:          'false' !default;\n\n\n/* =============================================\n                  CSS Variables\n============================================= */\n\n:root {\n  /* Grid */\n  --bc-grid-content-max-width: $content-max-width;\n  --bc-grid-max-width-padding: calc((100vw - (var(--bc-grid-content-max-width)) ) / 2);\n}","/********************************************\n  Grid\n*********************************************/\n.o-grid {\n  display: grid;\n  gap: 0 $grid-mobile-gutter;\n  grid-template-columns: repeat($grid-columns, 1fr);\n  padding-left: $grid-mobile-margin;\n  padding-right: $grid-mobile-margin;\n  margin: 0 auto;\n\n  @media screen and (min-width: $grid-breakpoint-standard) {\n    gap: 0 $grid-gutter;\n    padding-left: $grid-margin;\n    padding-right: $grid-margin;\n  }\n\n  @media screen and (min-width: $grid-breakpoint-max) {\n    padding-left: var(--bc-grid-max-width-padding);\n    padding-right: var(--bc-grid-max-width-padding);\n  }\n}","/********************************************\n  Full Width Grid with Bleed\n*********************************************/\n.o-bleed-grid {\n  display: grid;\n  gap: 0 $grid-mobile-gutter;\n  grid-template-columns:\n    [bleed-start]\n    calc($grid-mobile-margin - $grid-mobile-gutter)\n    [main-start]\n    repeat(5, 1fr)\n    [main-end]\n    calc($grid-mobile-margin - $grid-mobile-gutter)\n    [bleed-end];\n\n  @media screen and (min-width: $grid-breakpoint-standard) {\n    grid-template-columns:\n      [bleed-start]\n      calc($grid-margin - $grid-gutter)\n      [main-start]\n      repeat(12, 1fr)\n      [main-end]\n      calc($grid-margin - $grid-gutter)\n      [bleed-end];\n  }\n\n  @media screen and (min-width: $grid-breakpoint-bleed-max) {\n    grid-template-columns:\n      [bleed-start]\n      calc((100vw - ($content-max-width + ($grid-gutter * 2))) / 2)\n      [main-start]\n      repeat(12, 1fr)\n      [main-end]\n      calc((100vw - ($content-max-width + ($grid-gutter * 2))) / 2)\n      [bleed-end];\n  }\n}","/**\n * Create column classes\n * - example: `o-col-4`, `o-col-sm-4`\n *\n */\n@mixin create-column-classes($breakpoint: null) {\n  @for $i from 1 through $grid-columns {\n    @if $breakpoint == null {\n      .o-col-#{$i} {\n        grid-column: span $i / span $i;\n      }\n    } @else {\n      .o-col-#{$breakpoint}-#{$i} {\n        grid-column: span $i / span $i;\n      }\n    }\n  }\n}\n\n@include create-column-classes;\n\n@each $width $breakpoint in $column_breakpoints {\n  @media (min-width: $width) {\n    @include create-column-classes($breakpoint);\n  }\n}\n\n\n/**\n * Create column offset classes\n * - example: `o-col-start-4`, `o-col-start-sm-4`\n *\n */\n@mixin create-column-offsets($breakpoint: null) {\n  @for $i from 1 through $grid-columns {\n    @if $breakpoint == null {\n      .o-col-start-#{$i} {\n        grid-column-start: $i;\n      }\n    } @else {\n\n      .o-col-start-#{$breakpoint}-#{$i} {\n        grid-column-start: $i;\n      }\n    }\n  }\n}\n\n@include create-column-offsets;\n\n@each $width $breakpoint in $column_breakpoints {\n  @media (min-width: $width) {\n    @include create-column-offsets($breakpoint);\n  }\n}\n",".o-grid-sidebar {\n  $primaryColWidth: resolve($grid-columns * $grid-sidebar-primary-columns);\n  $asideColWidth:   resolve($grid-columns * $grid-sidebar-primary-columns);\n  $primaryWidth:    resolve($grid-sidebar-primary-columns / $grid-columns);\n  $asideWidth:      resolve($grid-sidebar-aside-columns / $grid-columns);\n\n\n  @media screen and (min-width: $grid-breakpoint-standard) {\n    display: grid;\n\n    @if $grid-sidebar-use-gap == 'true' {\n      gap: 0 $grid-sidebar-gutter;\n    } @else {\n      gap: 0;\n    }\n\n    @if $grid-sidebar-aside-first == 'true' {\n      grid-template-columns:\n        minmax(0, #{$grid-sidebar-aside-columns}fr)\n        minmax(0, #{$grid-sidebar-primary-columns}fr);\n    } @else {\n      grid-template-columns:\n        minmax(0, #{$grid-sidebar-primary-columns}fr)\n        minmax(0, #{$grid-sidebar-aside-columns}fr);\n    }\n\n\n\n  }\n\n\n  @media screen and (min-width: $grid-breakpoint-max) {\n    @if $grid-sidebar-aside-first == 'true' {\n      grid-template-columns:\n        calc( ( ( 100vw - $content-max-width ) / 2 ) + ($content-max-width * #{$asideWidth}) )\n        calc( ( ( 100vw - $content-max-width ) / 2 ) + ($content-max-width * #{$primaryWidth}) );\n    } @else {\n      grid-template-columns:\n        calc( ( ( 100vw - $content-max-width ) / 2 ) + ($content-max-width * #{$primaryWidth}) )\n        calc( ( ( 100vw - $content-max-width ) / 2 ) + ($content-max-width * #{$asideWidth}) );\n    }\n  }\n\n  /* #{$primaryWidth}% #{$asideWidth}%; */\n  /* + ($content-max-width * #{$primaryWidth}) */\n\n}\n\n\n.o-grid-sidebar__main {\n\n  .o-grid {\n    @media screen and (min-width: $grid-sidebar-breakpoint-standard) {\n      @if $grid-sidebar-aside-first == 'true' {\n        @if $grid-sidebar-use-gap == 'true' {\n          padding-left: 0;\n        } @else {\n          padding-left: resolve($grid-sidebar-gutter / 2);\n        }\n      } @else {\n        @if $grid-sidebar-use-gap == 'true' {\n          padding-right: 0;\n        } @else {\n          padding-right: resolve($grid-sidebar-gutter / 2);\n        }\n      }\n    }\n  }\n}\n\n.o-grid-sidebar__aside {\n\n  .o-grid {\n\n    @media screen and (min-width: $grid-sidebar-breakpoint-standard) {\n      @if $grid-sidebar-aside-first == 'true' {\n        @if $grid-sidebar-use-gap == 'true' {\n          padding-right: 0;\n        } @else {\n          padding-right: resolve($grid-sidebar-gutter / 2);\n        }\n      } @else {\n        @if $grid-sidebar-use-gap == 'true' {\n          padding-left: 0;\n        } @else {\n          padding-left: resolve($grid-sidebar-gutter / 2);\n        }\n      }\n    }\n  }\n}"]}