{"version":3,"sources":["assets/src/css/partials/grid/css-vars.css","assets/src/css/partials/grid/basic-grid.css","assets/src/css/partials/grid/bleed-grid.css","assets/src/css/partials/grid/column-classes.css"],"names":[],"mappings":"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QACE,oBAAwB;MAC1B;EAUJ;AAFA;;MAVI;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,oBAAwB;MAC1B;;MAFA;QACE,oBAAwB;MAC1B;;MAFA;QACE,oBAAwB;MAC1B;EAUJ;AAFA;;MAVI;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,oBAAwB;MAC1B;;MAFA;QACE,oBAAwB;MAC1B;;MAFA;QACE,oBAAwB;MAC1B;EAUJ;AAFA;;MAVI;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,mBAAwB;MAC1B;;MAFA;QACE,oBAAwB;MAC1B;;MAFA;QACE,oBAAwB;MAC1B;;MAFA;QACE,oBAAwB;MAC1B;EAUJ","file":"bc-grid.css","sourcesContent":["/* Grid */\n$content-max-width: 1600px !default;\n\n$grid-columns:         12   !default;\n$grid-mobile-gutter:   15px !default;\n$grid-gutter:          20px !default;\n$grid-mobile-margin:   15px !default;\n$grid-margin:          30px !default;\n\n\n$grid-breakpoint-standard:  750px !default;\n$grid-breakpoint-max:       resolve($content-max-width + ($grid-gutter * 2)) !default;\n$grid-breakpoint-bleed-max: resolve($content-max-width + ($grid-gutter * 2) + (($grid-margin - $grid-gutter) * 2)) !default;\n\n$column_breakpoints: (\n  xs: 480px,\n  sm: 768px,\n  md: 960px,\n  lg: 1170px\n) !default;\n\n:root {\n  /* Grid */\n  --bc-grid-content-max-width: $content-max-width;\n  --bc-grid-max-width-padding: calc((100vw - (var(--bc-grid-content-max-width)) ) / 2);\n}\n\n\n","/********************************************\n  Basic Grid\n*********************************************/\n.o-grid {\n  display: grid;\n  gap: 0 $grid-mobile-gutter;\n  grid-template-columns: repeat($grid-columns, minmax(0,1fr));\n  padding-left: $grid-mobile-margin;\n  padding-right: $grid-mobile-margin;\n  margin: 0 auto;\n\n  @media (min-width: $grid-breakpoint-standard) {\n    gap: 0 $grid-gutter;\n    padding-left: $grid-margin;\n    padding-right: $grid-margin;\n  }\n\n  @media (min-width: $grid-breakpoint-max) {\n    padding-left: var(--bc-grid-max-width-padding);\n    padding-right: var(--bc-grid-max-width-padding);\n  }\n}","/********************************************\n  Basic Grid\n*********************************************/\n.o-bleed-grid {\n  display: grid;\n  gap: 0 $grid-mobile-gutter;\n  grid-template-columns:\n    [bleed-start]\n    calc($grid-mobile-margin - $grid-mobile-gutter)\n    [main-start]\n    repeat($grid-columns, minmax(0, 1fr))\n    [main-end]\n    calc($grid-mobile-margin - $grid-mobile-gutter)\n    [bleed-end];\n\n  @media (min-width: $grid-breakpoint-standard) {\n    gap: 0 $grid-gutter;\n    grid-template-columns:\n      [bleed-start]\n        calc($grid-margin - $grid-gutter)\n      [main-start]\n        repeat($grid-columns, minmax(0, 1fr))\n      [main-end]\n        calc($grid-margin - $grid-gutter)\n      [bleed-end];\n  }\n\n  @media (min-width: $grid-breakpoint-bleed-max) {\n    grid-template-columns:\n      [bleed-start]\n        calc((100vw - (var(--bc-grid-content-max-width) + ($grid-gutter * 2))) / 2)\n      [main-start]\n        repeat($grid-columns, minmax(0, 1fr))\n      [main-end]\n        calc((100vw - (var(--bc-grid-content-max-width) + ($grid-gutter * 2))) / 2)\n      [bleed-end];\n  }\n}","@mixin create-column-classes($breakpoint: null) {\n  @for $i from 1 through $grid-columns {\n\n    @if $breakpoint == null {\n\n      .o-col-#{$i} {\n        grid-column: span $i / span $i;\n      }\n\n    } @else {\n\n      .o-col-#{$breakpoint}-#{$i} {\n        grid-column: span $i / span $i;\n      }\n    }\n  }\n}\n\n@include create-column-classes;\n\n@each $width $breakpoint in $column_breakpoints {\n  @media (min-width: $width) {\n    @include create-column-classes($breakpoint);\n  }\n}\n\n\n@mixin create-column-start-classes($breakpoint: null) {\n  @for $i from 1 through $grid-columns {\n\n    @if $breakpoint == null {\n\n      .o-col-start-#{$i} {\n        grid-column-start: #{$i};\n      }\n\n    } @else {\n\n      .o-col-#{$breakpoint}-start-#{$i} {\n        grid-column-start: #{$i};\n      }\n    }\n  }\n}\n\n@include create-column-start-classes;\n\n@each $width $breakpoint in $column_breakpoints {\n  @media (min-width: $width) {\n    @include create-column-start-classes($breakpoint);\n  }\n}\n"]}